#!/bin/bash

# Init file for codedeploy-agent
#
# chkconfig: 2345 98 02
# description: codedeploy-agent processes the deployments created by AWS CodeDeploy and installs \
# the deployment artifacts on to this instance.

### BEGIN INIT INFO
# Provides:          codedeploy-agent
# Required-Start:    $all
# Required-Stop:     $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: AWS CodeDeploy Host Agent
# Description:       codedeploy-agent processes the deployments created by AWS CodeDeploy and installs
#                    the deployment artifacts on to this instance.
### END INIT INFO

# Source function library.
if [ -f /etc/rc.d/init.d/functions ]; then
  . /etc/rc.d/init.d/functions
  ## Refers to version of OS supported (example: RHEL 6)
  OS_SUPPORT="6"
fi

RETVAL=0
[ -f /etc/profile ] && [ "`stat --format '%U %G' /etc/profile`" == "root root" ] && source /etc/profile

prog="codedeploy-agent"
USER=""
AGENT_ROOT="/opt/codedeploy-agent/"
INSTALLER="/opt/codedeploy-agent/bin/install"
BIN="/opt/codedeploy-agent/bin/codedeploy-agent"

start() {
        echo -n $"Starting $prog:"
        cd $AGENT_ROOT
        if [[ $USER && $OS_SUPPORT == "6" ]]; then
          daemon --user=$USER $BIN start >/dev/null </dev/null 2>&1 # Try to start the server
        else
          nohup $BIN start >/dev/null </dev/null 2>&1  # Try to start the server
        fi
        exit $?
}

stop() {
        echo -n $"Stopping $prog:"
        cd $AGENT_ROOT
        if [[ $USER && $OS_SUPPORT == "6" ]]; then
          daemon --user=$USER $BIN stop >/dev/null </dev/null 2>&1  # Try to stop the server
        else
          nohup $BIN stop >/dev/null </dev/null 2>&1  # Try to stop the server
        fi
        exit $?
}

restart() {
        echo -n $"Restarting $prog:"
        cd $AGENT_ROOT
        if [[ $USER && $OS_SUPPORT == "6" ]]; then
          daemon --user=$USER $BIN restart >/dev/null </dev/null 2>&1  # Try to restart the server
        else
          nohup $BIN restart >/dev/null </dev/null 2>&1  # Try to restart the server
        fi
        exit $?
}

status() {
        cd $AGENT_ROOT
        if [[ $USER && $OS_SUPPORT == "6" ]]; then
          daemon --user=$USER $BIN status # Status of the server
        else
          $BIN status # Status of the server
        fi
        exit $?
}

update() {
        echo -n $"Updating $prog:"
        cd $AGENT_ROOT
        if [[ $USER && $OS_SUPPORT == "6" ]]; then
          daemon --user=$USER sudo $INSTALLER auto #Update the agent
        else
          $INSTALLER auto #Update the agent
        fi
}

case "$1" in
        start)
                start
                ;;
        start-no-update)
                start
                ;;
        start-with-update)
                update
                start
                ;;
        stop)
                stop
                ;;
        restart)
                restart
                ;;
        force-reload)
                stop
                start
                ;;
        status)
                status
                ;;
        *)
                echo $"Usage: $0 {start|stop|status|restart}"
esac
